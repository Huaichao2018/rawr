% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sas.R
\name{parse_formats}
\alias{parse_formats}
\alias{parse_formats2}
\alias{apply_formats}
\title{Get formats from \code{SAS} format files}
\usage{
parse_formats(path)

parse_formats2(fmt, clean = TRUE)

apply_formats(x, fmt, clean = TRUE, droplevels = FALSE)
}
\arguments{
\item{path}{character string of path to \code{.sas} file}

\item{fmt}{a character string with formats to parse (or for
\code{apply_formats} a vector of parsed formats, e.g., the result of
\code{parse_formats} or \code{parse_formats2})}

\item{clean}{logical; if \code{TRUE} (default), the parsed formats will be
cleaned of quotes and extra whitespace}

\item{x}{a vector of data usually taking a small number of distinct values}

\item{droplevels}{logical; if \code{TRUE}, unused factor levels will be
dropped; default is not to drop unused levels}
}
\value{
For \code{parse_formats}, a list with format names in \code{path} and their
respective values and labels as named character vectors.

For \code{parse_formats2}, a character vector of formats with labels as
names.

For \code{apply_formats}, the input vector, \code{x}, recoded with the
formats given by \code{fmt}.
}
\description{
\code{parse_formats} and \code{parse_formats2} read text files (usually
\code{.sas}) or character strings, respectively, and extract \code{SAS}
format variable names and format values. \code{apply_formats} takes a
vector, \code{x}, of codes and applies the corresponding \code{fmt} to
each.
}
\examples{
p <- system.file('testfiles', 'formats.sas', package = 'rawr')
cat(readLines(p), sep = '\\n')
parse_formats(p)


## named vector of formats from string
fmt <- '0 = something, 1 = something else; 2 = yada. -9=yadayadayada, .C=blah'
parse_formats2(fmt)

## reordered if all levels are numeric and positive
parse_formats2('1=yes, 0=no, 2=maybe')


## use apply_formats to format factor variables
## use an unparsed character string
apply_formats('.C', fmt, droplevels = TRUE)
## or formats that have already been parsed
apply_formats('.C', parse_formats2(fmt), droplevels = TRUE)


x <- sample(0:2, 10, TRUE)
table(apply_formats(x, fmt), x)
apply_formats(x, fmt, droplevels = TRUE)

}
\seealso{
\code{\link{sas_path}}, \code{\link{rmacro}}, \code{\link{r2sas}},
\code{\link{get_margs}}, \code{\link{sas_mget}},
\code{\link{source_sas}}, \code{\link{sas_catalog}}
}
