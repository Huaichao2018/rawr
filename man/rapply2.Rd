% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{rapply2}
\alias{rapply2}
\title{Recursively apply a function to a list}
\usage{
rapply2(l, FUN, classes = "any", ...)
}
\arguments{
\item{l}{a list}

\item{FUN}{the function to be applied to each \code{classes} element of
\code{l}}

\item{classes}{a character vector of \code{\link{class}} names or
\code{"any"} to apply to every non-\code{\link{list}} element of \code{l}}

\item{...}{additional arguments passed to \code{FUN}}
}
\value{
A list having the same structure as \code{l} with \code{FUN} applied to
all (including nested) elements with a class matching \code{classes}.
}
\description{
Iterates over a (possibly nested) list and applies a function if a specific
\code{\link{class}} is found.
}
\examples{
ll <- list(list(list(head(cars), list(head(cars)))), letters[1:4],
           factor(1:4), 1:3, head(cars))
rapply2(ll, class)
rapply2(ll, log, classes = 'data.frame', base = 10)

## almost fully unlist a list
rapply2(ll, unlist, classes = 'list')

}
\seealso{
\code{\link{rapply}}
}

