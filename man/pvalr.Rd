% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils2.R
\name{pvalr}
\alias{pvalr}
\alias{pvalr2}
\alias{color_pval}
\title{p-value formatter}
\usage{
pvalr(pvals, sig.limit = 1e-03, digits = 3L, html = FALSE,
  show.p = FALSE)

pvalr2(pvals, html = FALSE, show.p = FALSE)

color_pval(pvals, breaks = c(0, 0.01, 0.05, 0.1, 0.5, 1),
  cols = colorRampPalette(2:1)(length(breaks)), sig.limit = 1e-03,
  digits = 3L, show.p = FALSE, format_pval = TRUE)
}
\arguments{
\item{pvals}{for \code{pvalr}, a numeric value or vector of p-values; for
\code{pvalr2}, a vector of p-values as character strings}

\item{sig.limit}{lower bound for precision}

\item{digits}{integer; number of decimal places; see also
\code{\link[rawr]{roundr}}}

\item{html}{logical; if \code{TRUE}, uses \code{&lt;} instead of \code{<}}

\item{show.p}{logical; if \code{TRUE}, inserts \code{p = } or \code{p < }
where appropriate}

\item{breaks, cols}{a numeric vector defining breaks in \code{(0,1)} (passed
to \code{\link{findInterval}}) and the corresponding colors}
}
\description{
Formats several cases of p-values; see details.
}
\details{
\code{pvalr} will deal with several cases of common p-values: 1) p-values
which are > 0.1 will be rounded to two decimal places (and keep any trailing
0s) since we are not usually interested in precision of insignificant
values; 2) p-values which are less than the specified \code{sig.level} will
be formatted as \code{< 0.001}, for example; 3) p-values that are less than
0.01 but greater than \code{sig.level} will be precise to \code{digits} and
keep any trailing 0s.

\code{pvalr2} deals with common cases of character string p-values which are
not ideal (0.000, 1.00, etc) and will leave others unchanged.
}
\examples{
pvals <- c(-1, .00001, .004233, .060123, .13354, .4999, .51, .89, .9, 1)
pvalr(pvals)
pvalr(pvals, show.p = TRUE, html = TRUE)

pvals <- c('0.00000', '< 0.001', '0.0', '0.123', '0.6', '1', '1.0', '1.000')
pvalr2(pvals)

pvals <- c(0.00001, 0.03, .06, .11, .49, .51, .89, .9, 1)
show_html(color_pval(pvals))
show_html(iprint(color_pval(pvals, show.p = TRUE)))

}
\seealso{
\code{\link[rawr]{roundr}}; \code{\link[base]{format.pval}}
}
