% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/utils.R
\name{bindx}
\alias{bind_all}
\alias{bindx}
\alias{cbindx}
\alias{rbindfill}
\alias{rbindx}
\title{Bind objects}
\usage{
bind_all(..., which)

cbindx(..., deparse.level = 1)

rbindx(..., deparse.level = 1)

rbindfill(...)
}
\arguments{
\item{...}{for \code{bind_all} and \code{rbindfill}, vectors;
\code{cbindx} and \code{rbindx} will accept vectors, matrices, data frames}

\item{which}{joining method; \code{'rbind'} or \code{'cbind'}}

\item{deparse.level}{integer controlling the construction of labels in
the case of non-matrix-like arguments (for the default method):\cr
\code{deparse.level = 0} constructs no labels; the default; \cr
\code{deparse.level = 1} or \code{2} constructs labels from the argument
names \cr see \code{\link{cbind}}}
}
\description{
Utilities for binding objects with inconsistent dimensions. \code{bind_all}
and \code{rbindfill} are used for binding vectors, the latter specifically
for \code{\link{rbind}}ing \emph{named} vectors a la a "stacking" merge.
\code{cbindx} and \code{rbindx} take vector-, matrix-, and data frame-like
objects and bind normally, filling with \code{NA}s where dimensions are
not equal.
}
\examples{
bind_all(1:5, 1:3, which = 'cbind')
bind_all(1:5, 1:3, which = 'rbind')

m1 <- matrix(1:4)
m2 <- matrix(1:4, 1)

cbindx(m1, m2)
rbindx(m1, m2)
rbindx(mtcars, m2)

f <- function(x) setNames(letters[x], LETTERS[x])
x <- lapply(list(1:5, 3:6, 2:7, 26), f)
do.call('rbindfill', x)
}
\seealso{
\pkg{qpcR}, \code{\link{cbind}}, \code{\link{rbind}}
}

